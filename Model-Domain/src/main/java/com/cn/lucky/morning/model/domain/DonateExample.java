package com.cn.lucky.morning.model.domain;

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;

public class DonateExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    protected int limitStart = -1;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    protected int limitEnd = -1;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    public DonateExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    public void setLimitStart(int limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    public int getLimitStart() {
        return limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    public void setLimitEnd(int limitEnd) {
        this.limitEnd=limitEnd;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    public int getLimitEnd() {
        return limitEnd;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    public void setPage(int page, int size) {
        this.limitStart = page * size;this.limitEnd = size;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNickNameIsNull() {
            addCriterion("nick_name is null");
            return (Criteria) this;
        }

        public Criteria andNickNameIsNotNull() {
            addCriterion("nick_name is not null");
            return (Criteria) this;
        }

        public Criteria andNickNameEqualTo(String value) {
            addCriterion("nick_name =", value, "nickName");
            return (Criteria) this;
        }

        public Criteria andNickNameNotEqualTo(String value) {
            addCriterion("nick_name <>", value, "nickName");
            return (Criteria) this;
        }

        public Criteria andNickNameGreaterThan(String value) {
            addCriterion("nick_name >", value, "nickName");
            return (Criteria) this;
        }

        public Criteria andNickNameGreaterThanOrEqualTo(String value) {
            addCriterion("nick_name >=", value, "nickName");
            return (Criteria) this;
        }

        public Criteria andNickNameLessThan(String value) {
            addCriterion("nick_name <", value, "nickName");
            return (Criteria) this;
        }

        public Criteria andNickNameLessThanOrEqualTo(String value) {
            addCriterion("nick_name <=", value, "nickName");
            return (Criteria) this;
        }

        public Criteria andNickNameLike(String value) {
            addCriterion("nick_name like", value, "nickName");
            return (Criteria) this;
        }

        public Criteria andNickNameNotLike(String value) {
            addCriterion("nick_name not like", value, "nickName");
            return (Criteria) this;
        }

        public Criteria andNickNameIn(List<String> values) {
            addCriterion("nick_name in", values, "nickName");
            return (Criteria) this;
        }

        public Criteria andNickNameNotIn(List<String> values) {
            addCriterion("nick_name not in", values, "nickName");
            return (Criteria) this;
        }

        public Criteria andNickNameBetween(String value1, String value2) {
            addCriterion("nick_name between", value1, value2, "nickName");
            return (Criteria) this;
        }

        public Criteria andNickNameNotBetween(String value1, String value2) {
            addCriterion("nick_name not between", value1, value2, "nickName");
            return (Criteria) this;
        }

        public Criteria andDonateMoneyIsNull() {
            addCriterion("donate_money is null");
            return (Criteria) this;
        }

        public Criteria andDonateMoneyIsNotNull() {
            addCriterion("donate_money is not null");
            return (Criteria) this;
        }

        public Criteria andDonateMoneyEqualTo(String value) {
            addCriterion("donate_money =", value, "donateMoney");
            return (Criteria) this;
        }

        public Criteria andDonateMoneyNotEqualTo(String value) {
            addCriterion("donate_money <>", value, "donateMoney");
            return (Criteria) this;
        }

        public Criteria andDonateMoneyGreaterThan(String value) {
            addCriterion("donate_money >", value, "donateMoney");
            return (Criteria) this;
        }

        public Criteria andDonateMoneyGreaterThanOrEqualTo(String value) {
            addCriterion("donate_money >=", value, "donateMoney");
            return (Criteria) this;
        }

        public Criteria andDonateMoneyLessThan(String value) {
            addCriterion("donate_money <", value, "donateMoney");
            return (Criteria) this;
        }

        public Criteria andDonateMoneyLessThanOrEqualTo(String value) {
            addCriterion("donate_money <=", value, "donateMoney");
            return (Criteria) this;
        }

        public Criteria andDonateMoneyLike(String value) {
            addCriterion("donate_money like", value, "donateMoney");
            return (Criteria) this;
        }

        public Criteria andDonateMoneyNotLike(String value) {
            addCriterion("donate_money not like", value, "donateMoney");
            return (Criteria) this;
        }

        public Criteria andDonateMoneyIn(List<String> values) {
            addCriterion("donate_money in", values, "donateMoney");
            return (Criteria) this;
        }

        public Criteria andDonateMoneyNotIn(List<String> values) {
            addCriterion("donate_money not in", values, "donateMoney");
            return (Criteria) this;
        }

        public Criteria andDonateMoneyBetween(String value1, String value2) {
            addCriterion("donate_money between", value1, value2, "donateMoney");
            return (Criteria) this;
        }

        public Criteria andDonateMoneyNotBetween(String value1, String value2) {
            addCriterion("donate_money not between", value1, value2, "donateMoney");
            return (Criteria) this;
        }

        public Criteria andDonateSourceIsNull() {
            addCriterion("donate_source is null");
            return (Criteria) this;
        }

        public Criteria andDonateSourceIsNotNull() {
            addCriterion("donate_source is not null");
            return (Criteria) this;
        }

        public Criteria andDonateSourceEqualTo(String value) {
            addCriterion("donate_source =", value, "donateSource");
            return (Criteria) this;
        }

        public Criteria andDonateSourceNotEqualTo(String value) {
            addCriterion("donate_source <>", value, "donateSource");
            return (Criteria) this;
        }

        public Criteria andDonateSourceGreaterThan(String value) {
            addCriterion("donate_source >", value, "donateSource");
            return (Criteria) this;
        }

        public Criteria andDonateSourceGreaterThanOrEqualTo(String value) {
            addCriterion("donate_source >=", value, "donateSource");
            return (Criteria) this;
        }

        public Criteria andDonateSourceLessThan(String value) {
            addCriterion("donate_source <", value, "donateSource");
            return (Criteria) this;
        }

        public Criteria andDonateSourceLessThanOrEqualTo(String value) {
            addCriterion("donate_source <=", value, "donateSource");
            return (Criteria) this;
        }

        public Criteria andDonateSourceLike(String value) {
            addCriterion("donate_source like", value, "donateSource");
            return (Criteria) this;
        }

        public Criteria andDonateSourceNotLike(String value) {
            addCriterion("donate_source not like", value, "donateSource");
            return (Criteria) this;
        }

        public Criteria andDonateSourceIn(List<String> values) {
            addCriterion("donate_source in", values, "donateSource");
            return (Criteria) this;
        }

        public Criteria andDonateSourceNotIn(List<String> values) {
            addCriterion("donate_source not in", values, "donateSource");
            return (Criteria) this;
        }

        public Criteria andDonateSourceBetween(String value1, String value2) {
            addCriterion("donate_source between", value1, value2, "donateSource");
            return (Criteria) this;
        }

        public Criteria andDonateSourceNotBetween(String value1, String value2) {
            addCriterion("donate_source not between", value1, value2, "donateSource");
            return (Criteria) this;
        }

        public Criteria andDonateTimeIsNull() {
            addCriterion("donate_time is null");
            return (Criteria) this;
        }

        public Criteria andDonateTimeIsNotNull() {
            addCriterion("donate_time is not null");
            return (Criteria) this;
        }

        public Criteria andDonateTimeEqualTo(Timestamp value) {
            addCriterion("donate_time =", value, "donateTime");
            return (Criteria) this;
        }

        public Criteria andDonateTimeNotEqualTo(Timestamp value) {
            addCriterion("donate_time <>", value, "donateTime");
            return (Criteria) this;
        }

        public Criteria andDonateTimeGreaterThan(Timestamp value) {
            addCriterion("donate_time >", value, "donateTime");
            return (Criteria) this;
        }

        public Criteria andDonateTimeGreaterThanOrEqualTo(Timestamp value) {
            addCriterion("donate_time >=", value, "donateTime");
            return (Criteria) this;
        }

        public Criteria andDonateTimeLessThan(Timestamp value) {
            addCriterion("donate_time <", value, "donateTime");
            return (Criteria) this;
        }

        public Criteria andDonateTimeLessThanOrEqualTo(Timestamp value) {
            addCriterion("donate_time <=", value, "donateTime");
            return (Criteria) this;
        }

        public Criteria andDonateTimeIn(List<Timestamp> values) {
            addCriterion("donate_time in", values, "donateTime");
            return (Criteria) this;
        }

        public Criteria andDonateTimeNotIn(List<Timestamp> values) {
            addCriterion("donate_time not in", values, "donateTime");
            return (Criteria) this;
        }

        public Criteria andDonateTimeBetween(Timestamp value1, Timestamp value2) {
            addCriterion("donate_time between", value1, value2, "donateTime");
            return (Criteria) this;
        }

        public Criteria andDonateTimeNotBetween(Timestamp value1, Timestamp value2) {
            addCriterion("donate_time not between", value1, value2, "donateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table m_donate
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table m_donate
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}